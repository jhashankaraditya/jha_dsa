class Solution {
public:
    bool isValid(string word) {
        if (word.size()<3) {
            return false;
        }
        unordered_map<char,bool> isVowel;
        isVowel['a']=true;
        isVowel['e']=true;
        isVowel['i']=true;
        isVowel['o']=true;
        isVowel['u']=true;
        int vowels=0, consonants=0;
        for (int i=0; i<word.size(); i++) {
            if (word[i]>='a' && word[i]<='z') {
                vowels+=(isVowel[word[i]]);
                consonants+=(1-isVowel[word[i]]);
            }
            else if (word[i]>='A' && word[i]<='Z') {
                char letter=word[i];
                letter=tolower(letter);
                vowels+=(isVowel[letter]);
                consonants+=(1-isVowel[letter]);
            }
            else if (word[i]>='0' && word[i]<='9') {
                
            }
            else {
                return false;
            }
        }
        return vowels>0 && consonants>0;
    }
};
