class Solution {
public:
    int maxProduct(vector<int>& nums) {
        int max_product=INT_MIN, n=nums.size();
        for (int i=0; i<n; i++) {
            if (nums[i]==0) {
                max_product=0;
                break;
            }
        }
        int left=0, right=0, curr_product=1;
        while (right<n && nums[right]==0) {
            right++;
            left++;
        }
        while (right<n) {
            curr_product*=nums[right];
            max_product=max(max_product,curr_product);
            if (right+1>=n || nums[right+1]==0) {
                while (left<=right) {
                    curr_product/=nums[left];
                    if (left!=right) {
                        max_product=max(max_product,curr_product);
                    }
                    left++;
                }
                right++;
                while (right<n && nums[right]==0) {
                    right++;
                }
                left=right;
                curr_product=1;
            }
            else right++;
        }
        return max_product;
    }
};
