class Solution {
    void markIslands(vector<vector<char>>& grid, vector<vector<int>> &marked, int x, int y) {
        if (x>0 && grid[x-1][y]=='1' && !marked[x-1][y]) {
            marked[x-1][y]=1;
            markIslands(grid,marked,x-1,y);
        }
        if (x<grid.size()-1 && grid[x+1][y]=='1' && !marked[x+1][y]) {
            marked[x+1][y]=1;
            markIslands(grid,marked,x+1,y);
        }
        if (y>0 && grid[x][y-1]=='1' && !marked[x][y-1]) {
            marked[x][y-1]=1;
            markIslands(grid,marked,x,y-1);
        }
        if (y<grid[0].size()-1 && grid[x][y+1]=='1' && !marked[x][y+1]) {
            marked[x][y+1]=1;
            markIslands(grid,marked,x,y+1);
        }
    }
public:
    int numIslands(vector<vector<char>>& grid) {
        int islands=0;
        vector<vector<int>> marked(grid.size(),vector<int>(grid[0].size(),0));
        for (int i=0; i<grid.size(); i++) {
            for (int j=0; j<grid[0].size(); j++) {
                if (!marked[i][j] && grid[i][j]=='1') {
                    islands++;
                    marked[i][j]=1;
                    markIslands(grid,marked,i,j);
                }
            }
        }
        return islands;
    }
};
