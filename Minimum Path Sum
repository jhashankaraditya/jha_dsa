class Solution {
public:
    int solvemem(vector<vector<int>>& grid, int row, int col, vector<vector<int>> &dp) {
        if (row==grid.size()-1 && col==grid[0].size()-1) {
            return grid[row][col];
        }
        if (row<0 || row>=grid.size() || col<0 || col>=grid[0].size()) {
            return INT_MAX;
        }
        if (dp[row][col]!=-1) {
            return dp[row][col];
        }
        int right_sum=solvemem(grid,row,col+1,dp);
        int down_sum=solvemem(grid,row+1,col,dp);
        return dp[row][col]=grid[row][col]+min(right_sum,down_sum);
    }
    int minPathSum(vector<vector<int>>& grid) {
        vector<vector<int>> dp(grid.size(),vector<int>(grid[0].size(),-1));
        return solvemem(grid,0,0,dp);
    }
};
