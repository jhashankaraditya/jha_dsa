/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if (head==NULL || head->next==NULL)
            return head;
        int count_nodes=0;
        ListNode* temp=head;
        while (temp!=NULL) {
            count_nodes++;
            temp=temp->next;
        }k=k%count_nodes;
        if (k==0)
            return head;
        int times=count_nodes-(k+1);
        temp=head;
        while (times--)
            temp=temp->next;
        ListNode* newlast=temp;
        ListNode* newhead=temp->next;
        temp=newhead;
        while (temp->next!=NULL)
            temp=temp->next;
        temp->next=head;
        newlast->next=NULL;
        return newhead;
    }
};
