/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    bool isLeaf(TreeNode* root) {
        return root->left==NULL && root->right==NULL;
    }
    bool validBST(TreeNode* root, int low, int high) {
        if (root==NULL) {
            return true;
        }
        bool leftValid=(root->val==INT_MIN)?root->left==NULL:validBST(root->left,low,root->val-1);
        bool rightValid=(root->val==INT_MAX)?root->right==NULL:validBST(root->right,root->val+1,high);
        bool selfValid=root->val>=low && root->val<=high;
        return leftValid && rightValid && selfValid;
    }
public:
    bool isValidBST(TreeNode* root) {
        if (root==NULL || isLeaf(root)) {
            return true;
        }
        return validBST(root,INT_MIN,INT_MAX);
    }
};
