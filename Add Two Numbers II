/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reversell(ListNode* head) {
        if (head==NULL || head->next==NULL)
            return head;
        ListNode* revhead=reversell(head->next);
        head->next->next=head;
        head->next=NULL;
        return revhead;
    }

    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* revhead1=reversell(l1);
        ListNode* revhead2=reversell(l2);
        ListNode* addans=new ListNode(-1);
        ListNode* temp=addans;
        int carry=0;
        while (revhead1!=NULL || revhead2!=NULL || carry>0) {
            int num1=0;
            if (revhead1!=NULL) {
                num1=revhead1->val;
                revhead1=revhead1->next;
            }
            int num2=0;
            if (revhead2!=NULL) {
                num2=revhead2->val;
                revhead2=revhead2->next;
            }
            int digit=(num1+num2+carry)%10;
            carry=(num1+num2+carry)/10;
            temp->next=new ListNode(digit);
            temp=temp->next;
        }return reversell(addans->next);
    }
};
