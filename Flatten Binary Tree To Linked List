/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    bool isLeaf(TreeNode* root) {
        return root->left==NULL && root->right==NULL;
    }
public:
    void flatten(TreeNode* root) {
        if (root==NULL || isLeaf(root)) {
            return;
        }
        TreeNode* curr=root;
        while (curr!=NULL) {
            TreeNode* prev=curr->left;
            if (prev==NULL) {
                curr=curr->right;
            }
            else {
                while (prev->right!=NULL) {
                    prev=prev->right;
                }
                prev->right=curr->right;
                curr->right=curr->left;
                curr=curr->left;
            }
        }
        curr=root;
        while (curr!=NULL) {
            if (curr->left!=NULL) {
                curr->left=NULL;
            }
            curr=curr->right;
        }
    }
};
