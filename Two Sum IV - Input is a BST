/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    void inorderTraverse(TreeNode* root, vector<int> &inorder) {
        if (root==NULL) {
            return;
        }
        inorderTraverse(root->left,inorder);
        inorder.push_back(root->val);
        inorderTraverse(root->right,inorder);
    }
public:
    bool findTarget(TreeNode* root, int k) {
        vector<int> inorder;
        inorderTraverse(root,inorder);
        for (int i=0; i<inorder.size(); i++) {
            if (inorder[i]==k/2) {
                continue;
            }
            int index=lower_bound(inorder.begin(),inorder.end(),k-inorder[i])-inorder.begin();
            if (index>=0 && index<inorder.size() && inorder[index]==k-inorder[i]) {
                return true;
            }
        }
        return false;
    }
};
