class Solution {
public:
    int peakindex(vector<int>& arr, int s, int e) {
        if (s>e)
            return -1;
        int mid=s+(e-s)/2;
        if (arr[mid]>arr[mid-1] && arr[mid]>arr[mid+1])
            return mid;
        int left=-1, right=-1;
        if (arr[mid-1]<arr[mid] && arr[mid]<arr[mid+1])
            right=peakindex(arr,mid,e);
        else if (arr[mid-1]>arr[mid] && arr[mid]>arr[mid+1])
            left=peakindex(arr,s,mid);
        int ans;
        if (left==-1 && right==-1)
            ans=-1;
        else if (left==-1 && right!=-1)
            ans=right;
        else if (left!=-1 && right==-1)
            ans=left;
        return ans;
    }

    int peakIndexInMountainArray(vector<int>& arr) {
        return peakindex(arr,0,arr.size()-1);
    }
};
