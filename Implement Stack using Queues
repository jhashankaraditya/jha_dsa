class MyStack {
    queue<int> q1;
    queue<int> q2;
    int count;
public:
    MyStack() {
        count=0;
    }
    
    void push(int x) {
        q1.push(x);
    }
    
    int pop() {
        if (q1.size()==0) {
            return -1;
        }
        int removed;
        while (q1.size()>1) {
            q2.push(q1.front());
            q1.pop();
        }
        removed=q1.front();
        q1.pop();
        while (!q2.empty()) {
            q1.push(q2.front());
            q2.pop();
        }
        return removed;
    }
    
    int top() {
        if (q1.size()==0) {
            return -1;
        }
        int top_element=-1;
        while (!q1.empty()) {
            q2.push(q1.front());
            if (q1.size()==1) {
                top_element=q1.front();
            }
            q1.pop();
        }
        while (!q2.empty()) {
            q1.push(q2.front());
            q2.pop();
        }
        return top_element;
    }
    
    bool empty() {
        return q1.size()==0;
    }
};
