/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    bool isLeaf(TreeNode* root) {
        return root->left==NULL && root->right==NULL; 
    }
    void leafOrder(TreeNode* root, vector<int> &leaf_order) {
        if (root==NULL) {
            return;
        }
        if (isLeaf(root)) {
            leaf_order.push_back(root->val);
        }
        leafOrder(root->left,leaf_order);
        leafOrder(root->right,leaf_order);
    }
public:
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        vector<int> order1, order2;
        leafOrder(root1,order1);
        leafOrder(root2,order2);
        if (order1.size()!=order2.size()) {
            return false;
        }
        for (int i=0; i<order1.size(); i++) {
            if (order1[i]!=order2[i]) {
                return false;
            }
        }
        return true;
    }
};
