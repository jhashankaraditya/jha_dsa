class Solution {
public:
    int solvemem(string s, int index, vector<int> &dp) {
        if (s[index]=='0') {
            return 0;
        }
        if (index==s.size()-1 || index>=s.size()) {
            return 1;
        }
        if (dp[index]!=-1) {
            return dp[index];
        }
        int ways=0;
        if (index<s.size()-1 && (s[index]=='1'||(s[index]=='2' && s[index+1]<='6'))) {
            int one_digit=solvemem(s,index+1,dp);
            int two_digit=solvemem(s,index+2,dp);
            ways=one_digit+two_digit;
        }
        if (index<s.size()-1 && ((s[index]=='2' && s[index+1]>='7')||(s[index]>='3'))) {
            ways=solvemem(s,index+1,dp);
        }
        return dp[index]=ways;
    }
    int numDecodings(string s) {
        vector<int> dp(s.size(),-1);
        return solvemem(s,0,dp);
    }
};
